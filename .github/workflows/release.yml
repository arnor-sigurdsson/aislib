name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest]
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Run tests with Python ${{ matrix.python-version }} on ${{ matrix.os }}
        run: |
          uv sync --group dev
          uv run tox -e py312

  getrelease:
    name: Get release
    needs: test
    runs-on: ubuntu-24.04
    outputs:
      versionoutput: ${{ steps.getversiontag.outputs.VERSION }}
    steps:
      - name: Get the tag version
        id: getversiontag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

  build:
    name: Build packages
    needs: getrelease
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            TARGET: ubuntu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Release
        id: release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true

  upload:
    name: Upload to PyPI
    needs: [build]
    runs-on: ubuntu-24.04
    environment: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: x64
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - run: uv build
      - run: uv publish